# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-06 07:59
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivedTeamNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'archived_team_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FibaGameInfos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('fiba_url', models.CharField(blank=True, max_length=255, null=True)),
                ('fiba_id', models.IntegerField(blank=True, null=True)),
                ('data_json', models.TextField(blank=True, null=True)),
                ('home_team_number', models.IntegerField(blank=True, null=True)),
                ('away_team_number', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fiba_game_infos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FibaGamePlayers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('team_number', models.IntegerField(blank=True, null=True)),
                ('player_number', models.IntegerField(blank=True, null=True)),
                ('jersey_number', models.IntegerField(blank=True, null=True)),
                ('player_name', models.CharField(blank=True, max_length=255, null=True)),
                ('player_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fiba_game_players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('opp_team_id', models.IntegerField(blank=True, null=True)),
                ('player_id', models.IntegerField(blank=True, null=True)),
                ('period', models.IntegerField(blank=True, null=True)),
                ('secs_remaining', models.IntegerField(blank=True, null=True)),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('action_subtype', models.CharField(blank=True, max_length=255, null=True)),
                ('scoring', models.NullBooleanField()),
                ('success', models.NullBooleanField()),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('lineup', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GamePeriodScorings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('period', models.IntegerField(blank=True, null=True)),
                ('home_pts', models.IntegerField(blank=True, null=True)),
                ('away_pts', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_period_scorings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GamePlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('player_id', models.IntegerField(blank=True, null=True)),
                ('player_jersey_number', models.IntegerField(blank=True, null=True)),
                ('seconds_played', models.IntegerField(blank=True, null=True)),
                ('fg_made', models.IntegerField(blank=True, null=True)),
                ('fg_attempts', models.IntegerField(blank=True, null=True)),
                ('three_pt_made', models.IntegerField(blank=True, null=True)),
                ('three_pt_attempts', models.IntegerField(blank=True, null=True)),
                ('ft_made', models.IntegerField(blank=True, null=True)),
                ('ft_attempts', models.IntegerField(blank=True, null=True)),
                ('offensive_reb', models.IntegerField(blank=True, null=True)),
                ('defensive_reb', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('steals', models.IntegerField(blank=True, null=True)),
                ('blocks', models.IntegerField(blank=True, null=True)),
                ('turnovers', models.IntegerField(blank=True, null=True)),
                ('personal_fouls', models.IntegerField(blank=True, null=True)),
                ('pts', models.IntegerField(blank=True, null=True)),
                ('started', models.NullBooleanField()),
                ('my_team_stat_id', models.IntegerField(blank=True, null=True)),
                ('opp_team_stat_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_player_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_id', models.IntegerField(blank=True, null=True)),
                ('schedule', models.DateTimeField(blank=True, null=True)),
                ('game_type', models.IntegerField(blank=True, null=True)),
                ('home_team_id', models.IntegerField(blank=True, null=True)),
                ('away_team_id', models.IntegerField(blank=True, null=True)),
                ('home_pts', models.IntegerField(blank=True, null=True)),
                ('away_pts', models.IntegerField(blank=True, null=True)),
                ('periods', models.IntegerField(blank=True, null=True)),
                ('pre_game_article_url', models.CharField(blank=True, max_length=255, null=True)),
                ('post_game_article_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'games',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameTeamStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('seconds_played', models.IntegerField(blank=True, null=True)),
                ('fg_made', models.IntegerField(blank=True, null=True)),
                ('fg_attempts', models.IntegerField(blank=True, null=True)),
                ('three_pt_made', models.IntegerField(blank=True, null=True)),
                ('three_pt_attempts', models.IntegerField(blank=True, null=True)),
                ('ft_made', models.IntegerField(blank=True, null=True)),
                ('ft_attempts', models.IntegerField(blank=True, null=True)),
                ('offensive_reb', models.IntegerField(blank=True, null=True)),
                ('defensive_reb', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('steals', models.IntegerField(blank=True, null=True)),
                ('blocks', models.IntegerField(blank=True, null=True)),
                ('turnovers', models.IntegerField(blank=True, null=True)),
                ('personal_fouls', models.IntegerField(blank=True, null=True)),
                ('pts', models.IntegerField(blank=True, null=True)),
                ('opp_team_stat_id', models.IntegerField(blank=True, null=True)),
                ('opp_team_id', models.IntegerField(blank=True, null=True)),
                ('fastbreak_pts', models.IntegerField(blank=True, null=True)),
                ('fastbreak_attempts', models.IntegerField(blank=True, null=True)),
                ('second_chance_pts', models.IntegerField(blank=True, null=True)),
                ('turnover_pts', models.IntegerField(blank=True, null=True)),
                ('team_offensive_reb', models.IntegerField(blank=True, null=True)),
                ('team_defensive_reb', models.IntegerField(blank=True, null=True)),
                ('team_turnovers', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_team_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leagues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort', models.IntegerField(blank=True, null=True)),
                ('periods', models.IntegerField(blank=True, null=True)),
                ('mins_per_period', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'leagues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerLeagues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('league_id', models.IntegerField()),
            ],
            options={
                'db_table': 'player_leagues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('current_league_id', models.IntegerField(blank=True, null=True)),
                ('current_team_id', models.IntegerField(blank=True, null=True)),
                ('current_jersey_number', models.IntegerField(blank=True, null=True)),
                ('player_type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('birth_place', models.CharField(blank=True, max_length=255, null=True)),
                ('drafted', models.CharField(blank=True, max_length=255, null=True)),
                ('highschool', models.CharField(blank=True, max_length=255, null=True)),
                ('college', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('real_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('real_last_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerTournamentTeams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField(blank=True, null=True)),
                ('tournament_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'player_tournament_teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'schema_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_id', models.IntegerField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournaments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('league_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('sub_tournaments_count', models.IntegerField(blank=True, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tournaments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('encrypted_password', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('reset_password_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('reset_password_sent_at', models.DateTimeField(blank=True, null=True)),
                ('remember_created_at', models.DateTimeField(blank=True, null=True)),
                ('sign_in_count', models.IntegerField()),
                ('current_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('current_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('page_url', models.CharField(blank=True, max_length=255, null=True)),
                ('video_url', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.CharField(blank=True, max_length=255, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'videos',
                'managed': False,
            },
        ),
    ]
